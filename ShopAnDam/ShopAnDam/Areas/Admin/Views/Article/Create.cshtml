
@model ShopAnDam.Models.Framework.Article

@{
    ViewBag.Title = "Thêm mới";
    Layout = null;
}

@section header{
    Thêm mới sản phẩm
}

<script>
        $(document).ready(function () {
            $('#btnSelectImage').on('click', function (e) {
                e.preventDefault();
                var finder = new CKFinder();
                finder.selectActionFunction = function (url) {
                    $('#txtImage').val(url);
                };
                finder.popup();
            })
        });

        var editor = CKEDITOR.replace('txtDescrition', {
            customConfig: '/Assets/admin/js/plugins/ckeditor/config.js'
        });
        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/Assets/admin/js/plugins/ckeditor/config.js'
        });
        $('#name').keypress(function () {
            $('#meta').val(getMeta($(this).val()));
        });

        function getMeta(title) {
            return title.toLowerCase().trim()  //đưa hết về kiểu chữ thường
                .replace(/à|á|ạ|ả|ã|ă|ằ|ắ|ẳ|ặ|â|ẵ|ấ|ầ|ẩ|ậ|ẫ/g, "a")
                .replace(/\ /g, '-')
                .replace(/đ/g, "d")
                .replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y")
                .replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ử|ự|ữ/g, "u")
                .replace(/ó|ò|ỏ|ọ|õ|ô|ồ|ố|ổ|ộ|ỗ|ơ|ớ|ờ|ở|ợ|ỡ.+/g, "o")
                .replace(/è|é|ẻ|ẹ|ẽ|ề|ế|ệ|ể|ễ/g, "e")
                .replace(/ì|í|ỉ|ị|ĩ/g, "i")
                .replace(/\s+/g, '-')
                .replace(/&/g, '-va-')
                .replace(/[^\w\-]+/g, '')
                .replace(/\-\-+/g, '-');
        }

</script>
    


<div class="row mt">
    <div class="col-lg-12">
        <div>
            @using (Html.BeginForm("Create", "Article", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                
            <div class="form-horizontal ">
                <div class="form-group ">
                    @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "col-sm-3 control-label", @id = "topic" })
                    <div class="col-sm-8">
                        @Html.DropDownListFor(model => model.TopicID, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TopicID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", @id = "name" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-sm-3 control-label", @id = "title" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Title, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.MetaTitle, htmlAttributes: new { @class = "form-control", @id = "meta" })
                        @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-md-8">
                        <div class="input-group">
                            @Html.TextBoxFor(model => model.Images, htmlAttributes: new { @class = "form-control", @id = "txtImage" })
                            @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                            <span class="input-group-btn">
                                <a class="btn btn-theme03" id="btnSelectImage" href="#"><i class="fa fa-cloud-upload"></i></a>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-sm-3 control-label", @id = "description" })
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", @id = "txtContent" }, id = "txtContent" })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="form-check">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-1">
                            @Html.CheckBoxFor(model => model.Status)
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.CreateDate, htmlAttributes: new { @class = "form-control", @type = "date" })
                        @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "col-sm-3 control-label", @id = "source" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.Source, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-8 col-md-2">
                        <button type="submit" value="Thêm Mới" class="btn btn-theme"><i class="fa fa-edit"></i>Thêm mới</button>
                    </div>

                </div>
            </div>
            }

        </div>
            </div>
    <!-- col-lg-12-->
</div>
